package main

import "data_structure/algrithm"

func main() {
	//algrithm.TestValidateHuiwen()
	//algrithm.TestDeleteDup()
	//algrithm.TestSum()
	//algrithm.TestResortLink()
	//algrithm.TestFindLastKElem()
	//algrithm.TestInverseAdjacentElem()
	//algrithm.TestRevertKElem()
	//algrithm.TestMergeLink()
	//algrithm.TestSqrt()
	//algrithm.TestFindUniqDupVal()
	//algrithm.TestFindMoreDupVals()
	//algrithm.TestFindMinMax()
	//algrithm.TestFindMinElemOfRotatedOfArray()
	//algrithm.TestFindOddTimesElement()
	//algrithm.TestFindKMinElement()
	//algrithm.TestStockTrade()
	//algrithm.EightQueen()
	//algrithm.Test01Package()
	//algrithm.TestMatchRegularExpression()
	//algrithm.TestMinDistance()
	//algrithm.TestFindLongestHuiwen()
	//algrithm.TestPrintMaxNBitNumber()
	//algrithm.TestRegular()
	//algrithm.TestFindLongestNoDuplicatSubString()
	//algrithm.TestTrie()
	//algrithm.TestFindLongestPrefix()
	//algrithm.TestStringRank()
	//algrithm.TestValidateContainRank()
	//algrithm.TestStringMultiplication()
	//algrithm.TestNumeric()
	//algrithm.TestSummaryThreeNumber()
	//algrithm.TestGetLongestIncrSequenceSize()
	//algrithm.TestFindKMaxElement()
	//algrithm.TestValidateBSTreeByPostOrder()
	algrithm.TestBSTreeConvert()
}
